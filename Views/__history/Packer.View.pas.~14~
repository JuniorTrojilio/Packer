unit Packer.View;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    ProgressBar1: TProgressBar;
    Button1: TButton;
    Button2: TButton;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

uses
  Packer.Controller.Factory, Dialogs.Controllers.Factory;

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  TPackerFactory
    .New
      .Method
        .Zip
          .Params
            .SaveAs()
            .AddFilterExt
              .AddXML
              .AddPDF
              .AddFDB
            .EndFilterExt
          .EndParams;
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  lFiles : TStrings;
  I : Integer;
begin
  TDialogFactory
    .New
      .OpenDialog
        .Params
          .Title('Selecione o(s) arquivo(s) para compactar')
          .AddFilter
            .AddXML
            .AddPDF
            .AddTXT
            .AddAll
            .AddZip
          .EndFilter
          .FilterIndex(4)
          .AddOption
            .ReadOnly
            .AllowMultiSelect
            .FileMustExist
          .EndOptions
       .EndParams
       .Execute(lFiles);

  for I := 0 to Pred(lFiles.Count) do
  begin
    Memo1.Lines.Add(lFiles.Names[I])
  end;
end;

end.
